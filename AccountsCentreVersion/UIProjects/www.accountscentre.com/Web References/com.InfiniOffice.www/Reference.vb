'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
'
Namespace com.InfiniOffice.www
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="InfiniOfficeServerBinding", [Namespace]:="urn:InfiniOfficeServer")>  _
    Public Class InfiniOfficeServerService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://www.centre.biz/webservices/soap/webservices.php"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CompanyService#companyservice#ActivateIOProducts", RequestNamespace:="urn:CompanyService", ResponseNamespace:="urn:CompanyService")>  _
        Public Function ActivateIOProducts(ByVal customerid As String, ByVal companyname As String, ByVal productlist As String) As <System.Xml.Serialization.SoapElementAttribute("0")> String
            Dim results() As Object = Me.Invoke("ActivateIOProducts", New Object() {customerid, companyname, productlist})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginActivateIOProducts(ByVal customerid As String, ByVal companyname As String, ByVal productlist As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActivateIOProducts", New Object() {customerid, companyname, productlist}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndActivateIOProducts(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CompanyService#companyservice#DisableIOProducts", RequestNamespace:="urn:CompanyService", ResponseNamespace:="urn:CompanyService")>  _
        Public Sub DisableIOProducts(ByVal customerid As String, ByVal companyname As String, <System.Xml.Serialization.SoapElementAttribute("0")> ByRef Item0 As String)
            Dim results() As Object = Me.Invoke("DisableIOProducts", New Object() {customerid, companyname, Item0})
            Item0 = CType(results(0),String)
        End Sub
        
        '<remarks/>
        Public Function BeginDisableIOProducts(ByVal customerid As String, ByVal companyname As String, ByVal Item0 As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DisableIOProducts", New Object() {customerid, companyname, Item0}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Sub EndDisableIOProducts(ByVal asyncResult As System.IAsyncResult, ByRef Item0 As String)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Item0 = CType(results(0),String)
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CompanyService#companyservice#RenewIOProducts", RequestNamespace:="urn:CompanyService", ResponseNamespace:="urn:CompanyService")>  _
        Public Sub RenewIOProducts(ByVal customerid As String, ByVal companyname As String, <System.Xml.Serialization.SoapElementAttribute("0")> ByRef Item0 As String)
            Dim results() As Object = Me.Invoke("RenewIOProducts", New Object() {customerid, companyname, Item0})
            Item0 = CType(results(0),String)
        End Sub
        
        '<remarks/>
        Public Function BeginRenewIOProducts(ByVal customerid As String, ByVal companyname As String, ByVal Item0 As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RenewIOProducts", New Object() {customerid, companyname, Item0}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Sub EndRenewIOProducts(ByVal asyncResult As System.IAsyncResult, ByRef Item0 As String)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Item0 = CType(results(0),String)
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CompanyService#companyservice#DeleteCompany", RequestNamespace:="urn:CompanyService", ResponseNamespace:="urn:CompanyService")>  _
        Public Function DeleteCompany(ByVal customerid As String, ByVal companyname As String) As <System.Xml.Serialization.SoapElementAttribute("0")> String
            Dim results() As Object = Me.Invoke("DeleteCompany", New Object() {customerid, companyname})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginDeleteCompany(ByVal customerid As String, ByVal companyname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteCompany", New Object() {customerid, companyname}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndDeleteCompany(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CompanyService#companyservice#GetCompanyDetails", RequestNamespace:="urn:CompanyService", ResponseNamespace:="urn:CompanyService")>  _
        Public Function GetCompanyDetails(ByVal customerid As String, ByVal companyname As String) As <System.Xml.Serialization.SoapElementAttribute("0")> String
            Dim results() As Object = Me.Invoke("GetCompanyDetails", New Object() {customerid, companyname})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginGetCompanyDetails(ByVal customerid As String, ByVal companyname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCompanyDetails", New Object() {customerid, companyname}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetCompanyDetails(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:CompanyService#companyservice#CreateCompany", RequestNamespace:="urn:CompanyService", ResponseNamespace:="urn:CompanyService")>  _
        Public Function CreateCompany(ByVal customerid As String, ByVal companyname As String, ByVal domainname As String, ByVal package As String, ByVal usesubdomain As String) As <System.Xml.Serialization.SoapElementAttribute("0")> String
            Dim results() As Object = Me.Invoke("CreateCompany", New Object() {customerid, companyname, domainname, package, usesubdomain})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginCreateCompany(ByVal customerid As String, ByVal companyname As String, ByVal domainname As String, ByVal package As String, ByVal usesubdomain As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateCompany", New Object() {customerid, companyname, domainname, package, usesubdomain}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCreateCompany(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AuthenticateClass#authenticateclass#AuthenticateUser", RequestNamespace:="urn:AuthenticateClass", ResponseNamespace:="urn:AuthenticateClass")>  _
        Public Function AuthenticateUser(ByVal user As String, ByVal pw As String) As <System.Xml.Serialization.SoapElementAttribute("result")> ResultSet
            Dim results() As Object = Me.Invoke("AuthenticateUser", New Object() {user, pw})
            Return CType(results(0),ResultSet)
        End Function
        
        '<remarks/>
        Public Function BeginAuthenticateUser(ByVal user As String, ByVal pw As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AuthenticateUser", New Object() {user, pw}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAuthenticateUser(ByVal asyncResult As System.IAsyncResult) As ResultSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ResultSet)
        End Function
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("ResultSet", "http://soapinterop.org/xsd")>  _
    Public Class ResultSet
        
        '<remarks/>
        Public code As String
        
        '<remarks/>
        Public desc As String
        
        '<remarks/>
        Public sid As String
    End Class
End Namespace
