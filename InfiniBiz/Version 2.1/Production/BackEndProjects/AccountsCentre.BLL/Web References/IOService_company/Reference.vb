'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2300
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2300.
'
Namespace IOService_company
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="IOservicesBinding", [Namespace]:="urn:IOservices")>  _
    Public Class IOservices
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://services.office.infinibiz.com/company.php"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OIBZservices#IsCompanyExists", RequestNamespace:="urn:OIBZservices", ResponseNamespace:="urn:OIBZservices")>  _
        Public Function IsCompanyExists(ByVal companyInfo As IsCompanyExistsData) As <System.Xml.Serialization.SoapElementAttribute("responseMessage")> IsCompanyExistsReturnMessage
            Dim results() As Object = Me.Invoke("IsCompanyExists", New Object() {companyInfo})
            Return CType(results(0),IsCompanyExistsReturnMessage)
        End Function
        
        '<remarks/>
        Public Function BeginIsCompanyExists(ByVal companyInfo As IsCompanyExistsData, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsCompanyExists", New Object() {companyInfo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsCompanyExists(ByVal asyncResult As System.IAsyncResult) As IsCompanyExistsReturnMessage
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),IsCompanyExistsReturnMessage)
        End Function
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("IsCompanyExistsData", "urn:IOservices")>  _
    Public Class IsCompanyExistsData
        
        '<remarks/>
        Public companyname As String
        
        '<remarks/>
        Public customerid As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("IsCompanyExistsReturnMessage", "urn:IOservices")>  _
    Public Class IsCompanyExistsReturnMessage
        
        '<remarks/>
        Public ERRORCODE As String
        
        '<remarks/>
        Public ERRORDESC As String
        
        '<remarks/>
        Public GLOBALID As String
    End Class
End Namespace
