'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
'
Namespace ACCUstomer
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CustomerSoap", [Namespace]:="http://tempuri.org/CustomerProcessing/CustomerProcessing")>  _
    Public Class Customer
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://accounts.infinibiz.com/Customer/Customer.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerProcessing/CustomerProcessing/GetActivationInfo", RequestNamespace:="http://tempuri.org/CustomerProcessing/CustomerProcessing", ResponseNamespace:="http://tempuri.org/CustomerProcessing/CustomerProcessing", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActivationInfo(ByVal CustomerID As Integer, ByVal ProductCode As String, ByVal OrderNo As Integer, ByVal SerialNo As Integer, ByVal Language As String) As String()
            Dim results() As Object = Me.Invoke("GetActivationInfo", New Object() {CustomerID, ProductCode, OrderNo, SerialNo, Language})
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        Public Function BeginGetActivationInfo(ByVal CustomerID As Integer, ByVal ProductCode As String, ByVal OrderNo As Integer, ByVal SerialNo As Integer, ByVal Language As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetActivationInfo", New Object() {CustomerID, ProductCode, OrderNo, SerialNo, Language}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetActivationInfo(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerProcessing/CustomerProcessing/Activate", RequestNamespace:="http://tempuri.org/CustomerProcessing/CustomerProcessing", ResponseNamespace:="http://tempuri.org/CustomerProcessing/CustomerProcessing", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Activate(ByVal CustomerID As Integer, ByVal ProductCode As String, ByVal OrderNo As Integer, ByVal SerialNo As Integer, ByVal Language As String, ByVal CompanyName As String) As String()
            Dim results() As Object = Me.Invoke("Activate", New Object() {CustomerID, ProductCode, OrderNo, SerialNo, Language, CompanyName})
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        Public Function BeginActivate(ByVal CustomerID As Integer, ByVal ProductCode As String, ByVal OrderNo As Integer, ByVal SerialNo As Integer, ByVal Language As String, ByVal CompanyName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Activate", New Object() {CustomerID, ProductCode, OrderNo, SerialNo, Language, CompanyName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndActivate(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
    End Class
End Namespace
