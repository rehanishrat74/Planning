'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2379
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2379.
'
Namespace com.u_d.webservices
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UniversalDomainServicesBinding", [Namespace]:="urn:UniversalDomainServices"),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(product)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(EmailType)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(productDetails)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(DomainType))>  _
    Public Class UniversalDomainServices
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://webservices.u-d.com/domain.php"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#getDomainList", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function getDomainList(ByVal customerid As String) As <System.Xml.Serialization.SoapElementAttribute("return")> List
            Dim results() As Object = Me.Invoke("getDomainList", New Object() {customerid})
            Return CType(results(0),List)
        End Function
        
        '<remarks/>
        Public Function BegingetDomainList(ByVal customerid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDomainList", New Object() {customerid}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetDomainList(ByVal asyncResult As System.IAsyncResult) As List
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),List)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#checkDomainExist", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function checkDomainExist(ByVal domainName As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("checkDomainExist", New Object() {domainName})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BegincheckDomainExist(ByVal domainName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("checkDomainExist", New Object() {domainName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndcheckDomainExist(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#domainAvailable", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function domainAvailable(ByVal domainName As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Boolean
            Dim results() As Object = Me.Invoke("domainAvailable", New Object() {domainName})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BegindomainAvailable(ByVal domainName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("domainAvailable", New Object() {domainName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddomainAvailable(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#IsSubDomainAvailable", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function isDomainAvailable(ByVal domainName As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("isDomainAvailable", New Object() {domainName})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginisDomainAvailable(ByVal domainName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("isDomainAvailable", New Object() {domainName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndisDomainAvailable(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#domainInfo", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function domainInfo(ByVal domainName As String) As <System.Xml.Serialization.SoapElementAttribute("return")> DomainDetail
            Dim results() As Object = Me.Invoke("domainInfo", New Object() {domainName})
            Return CType(results(0),DomainDetail)
        End Function
        
        '<remarks/>
        Public Function BegindomainInfo(ByVal domainName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("domainInfo", New Object() {domainName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddomainInfo(ByVal asyncResult As System.IAsyncResult) As DomainDetail
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),DomainDetail)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#regDomain", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function regDomain(ByVal domainname As String, ByVal refererid As Integer, ByVal companyname As String, ByVal customerid As Long, ByVal companynumber As String, ByVal hosting As Boolean, ByVal memberInfo As MemberInfo, ByVal alreadyregistered As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("regDomain", New Object() {domainname, refererid, companyname, customerid, companynumber, hosting, memberInfo, alreadyregistered})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginregDomain(ByVal domainname As String, ByVal refererid As Integer, ByVal companyname As String, ByVal customerid As Long, ByVal companynumber As String, ByVal hosting As Boolean, ByVal memberInfo As MemberInfo, ByVal alreadyregistered As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("regDomain", New Object() {domainname, refererid, companyname, customerid, companynumber, hosting, memberInfo, alreadyregistered}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndregDomain(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#activateProduct", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function activateProducts(ByVal orderno As Decimal, ByVal domaiName As String, ByVal products() As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("activateProducts", New Object() {orderno, domaiName, products})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginactivateProducts(ByVal orderno As Decimal, ByVal domaiName As String, ByVal products() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("activateProducts", New Object() {orderno, domaiName, products}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndactivateProducts(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#addtestdomain", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function addtestdomain(ByVal domainname As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Domaininfo
            Dim results() As Object = Me.Invoke("addtestdomain", New Object() {domainname})
            Return CType(results(0),Domaininfo)
        End Function
        
        '<remarks/>
        Public Function Beginaddtestdomain(ByVal domainname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("addtestdomain", New Object() {domainname}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function Endaddtestdomain(ByVal asyncResult As System.IAsyncResult) As Domaininfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Domaininfo)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#addHosting", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function addHosting(ByVal domainName As String, ByVal years As Integer, ByVal quota As Integer, ByVal customerid As Long, ByVal refererid As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("addHosting", New Object() {domainName, years, quota, customerid, refererid})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginaddHosting(ByVal domainName As String, ByVal years As Integer, ByVal quota As Integer, ByVal customerid As Long, ByVal refererid As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("addHosting", New Object() {domainName, years, quota, customerid, refererid}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndaddHosting(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#renewDomain", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function renewDomain(ByVal domainName As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("renewDomain", New Object() {domainName})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginrenewDomain(ByVal domainName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("renewDomain", New Object() {domainName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndrenewDomain(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#renewHosting", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function renewHosting(ByVal domainName As String, ByVal years As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("renewHosting", New Object() {domainName, years})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginrenewHosting(ByVal domainName As String, ByVal years As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("renewHosting", New Object() {domainName, years}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndrenewHosting(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#deleteDomain", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function deleteDomain(ByVal domainName As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("deleteDomain", New Object() {domainName})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BegindeleteDomain(ByVal domainName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("deleteDomain", New Object() {domainName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddeleteDomain(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#deleteHosting", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function deleteHosting(ByVal domainName As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("deleteHosting", New Object() {domainName})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BegindeleteHosting(ByVal domainName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("deleteHosting", New Object() {domainName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddeleteHosting(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#deleteProducts", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function deleteProducts(ByVal domaiName As String, ByVal products() As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("deleteProducts", New Object() {domaiName, products})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BegindeleteProducts(ByVal domaiName As String, ByVal products() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("deleteProducts", New Object() {domaiName, products}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddeleteProducts(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#unsubscribeProducts", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function unsubscribeProducts(ByVal entityid As String, ByVal products() As productDetails) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("unsubscribeProducts", New Object() {entityid, products})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginunsubscribeProducts(ByVal entityid As String, ByVal products() As productDetails, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("unsubscribeProducts", New Object() {entityid, products}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndunsubscribeProducts(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#deleteOrder", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function deleteOrder(ByVal orderno As Decimal) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("deleteOrder", New Object() {orderno})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BegindeleteOrder(ByVal orderno As Decimal, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("deleteOrder", New Object() {orderno}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddeleteOrder(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#addUser", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function addUser(ByVal name As String, ByVal username As String, ByVal password As String, ByVal description As String, ByVal olduser As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> Details
            Dim results() As Object = Me.Invoke("addUser", New Object() {name, username, password, description, olduser})
            Return CType(results(0),Details)
        End Function
        
        '<remarks/>
        Public Function BeginaddUser(ByVal name As String, ByVal username As String, ByVal password As String, ByVal description As String, ByVal olduser As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("addUser", New Object() {name, username, password, description, olduser}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndaddUser(ByVal asyncResult As System.IAsyncResult) As Details
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Details)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#addSubDomain", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function addSubDomain(ByVal customerid As String, ByVal domainName As String, ByVal hostname As String, ByVal username As String, ByVal password As String, ByVal hosting As Boolean, ByVal months As Integer, ByVal description As String, ByVal oldCustomer As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> SubDomaininfo
            Dim results() As Object = Me.Invoke("addSubDomain", New Object() {customerid, domainName, hostname, username, password, hosting, months, description, oldCustomer})
            Return CType(results(0),SubDomaininfo)
        End Function
        
        '<remarks/>
        Public Function BeginaddSubDomain(ByVal customerid As String, ByVal domainName As String, ByVal hostname As String, ByVal username As String, ByVal password As String, ByVal hosting As Boolean, ByVal months As Integer, ByVal description As String, ByVal oldCustomer As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("addSubDomain", New Object() {customerid, domainName, hostname, username, password, hosting, months, description, oldCustomer}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndaddSubDomain(ByVal asyncResult As System.IAsyncResult) As SubDomaininfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),SubDomaininfo)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#addSubdomainUser", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function addSubdomainUser(ByVal subdomain As String, ByVal username As String, ByVal password As String, ByVal olduser As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> SubDomaininfo
            Dim results() As Object = Me.Invoke("addSubdomainUser", New Object() {subdomain, username, password, olduser})
            Return CType(results(0),SubDomaininfo)
        End Function
        
        '<remarks/>
        Public Function BeginaddSubdomainUser(ByVal subdomain As String, ByVal username As String, ByVal password As String, ByVal olduser As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("addSubdomainUser", New Object() {subdomain, username, password, olduser}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndaddSubdomainUser(ByVal asyncResult As System.IAsyncResult) As SubDomaininfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),SubDomaininfo)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#deleteUser", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function deleteUser(ByVal emailid As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Details
            Dim results() As Object = Me.Invoke("deleteUser", New Object() {emailid})
            Return CType(results(0),Details)
        End Function
        
        '<remarks/>
        Public Function BegindeleteUser(ByVal emailid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("deleteUser", New Object() {emailid}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddeleteUser(ByVal asyncResult As System.IAsyncResult) As Details
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Details)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#deleteSubDomain", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function deleteSubDomain(ByVal domainName As String, ByVal hostname As String) As <System.Xml.Serialization.SoapElementAttribute("return")> SubDomaininfo
            Dim results() As Object = Me.Invoke("deleteSubDomain", New Object() {domainName, hostname})
            Return CType(results(0),SubDomaininfo)
        End Function
        
        '<remarks/>
        Public Function BegindeleteSubDomain(ByVal domainName As String, ByVal hostname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("deleteSubDomain", New Object() {domainName, hostname}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddeleteSubDomain(ByVal asyncResult As System.IAsyncResult) As SubDomaininfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),SubDomaininfo)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#deleteSubdomainUser", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function deleteSubdomainUser(ByVal subdomain As String, ByVal username As String) As <System.Xml.Serialization.SoapElementAttribute("return")> SubDomaininfo
            Dim results() As Object = Me.Invoke("deleteSubdomainUser", New Object() {subdomain, username})
            Return CType(results(0),SubDomaininfo)
        End Function
        
        '<remarks/>
        Public Function BegindeleteSubdomainUser(ByVal subdomain As String, ByVal username As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("deleteSubdomainUser", New Object() {subdomain, username}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddeleteSubdomainUser(ByVal asyncResult As System.IAsyncResult) As SubDomaininfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),SubDomaininfo)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#IsSubDomainAvailable", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function IsSubDomainAvailable(ByVal subdomain As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("IsSubDomainAvailable", New Object() {subdomain})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginIsSubDomainAvailable(ByVal subdomain As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsSubDomainAvailable", New Object() {subdomain}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsSubDomainAvailable(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#getMailList", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function getEmailList(ByVal domainname As String) As <System.Xml.Serialization.SoapElementAttribute("return")> EmailList
            Dim results() As Object = Me.Invoke("getEmailList", New Object() {domainname})
            Return CType(results(0),EmailList)
        End Function
        
        '<remarks/>
        Public Function BegingetEmailList(ByVal domainname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getEmailList", New Object() {domainname}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetEmailList(ByVal asyncResult As System.IAsyncResult) As EmailList
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EmailList)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#validateEmail", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function verifyEmailid(ByVal emailid As String, ByVal password As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("verifyEmailid", New Object() {emailid, password})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginverifyEmailid(ByVal emailid As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("verifyEmailid", New Object() {emailid, password}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndverifyEmailid(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#SetAccountPassword", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function SetAccountPassword(ByVal emailid As String, ByVal password As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("SetAccountPassword", New Object() {emailid, password})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginSetAccountPassword(ByVal emailid As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetAccountPassword", New Object() {emailid, password}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetAccountPassword(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#VerifyAccount", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function VerifyAccount(ByVal emailid As String, ByVal password As String) As <System.Xml.Serialization.SoapElementAttribute("return")> VerifyResult
            Dim results() As Object = Me.Invoke("VerifyAccount", New Object() {emailid, password})
            Return CType(results(0),VerifyResult)
        End Function
        
        '<remarks/>
        Public Function BeginVerifyAccount(ByVal emailid As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerifyAccount", New Object() {emailid, password}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndVerifyAccount(ByVal asyncResult As System.IAsyncResult) As VerifyResult
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),VerifyResult)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#ModifyAccountPassword", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function ModifyAccountPassword(ByVal emailid As String, ByVal newpassword As String, ByVal oldpassword As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("ModifyAccountPassword", New Object() {emailid, newpassword, oldpassword})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginModifyAccountPassword(ByVal emailid As String, ByVal newpassword As String, ByVal oldpassword As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModifyAccountPassword", New Object() {emailid, newpassword, oldpassword}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndModifyAccountPassword(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#addEmailForward", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function addEmailForward(ByVal userid As String, ByVal domainname As String, ByVal forwardto As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("addEmailForward", New Object() {userid, domainname, forwardto})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginaddEmailForward(ByVal userid As String, ByVal domainname As String, ByVal forwardto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("addEmailForward", New Object() {userid, domainname, forwardto}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndaddEmailForward(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#deleteEmailAccount", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function deleteEmailAccount(ByVal emailid As String, ByVal domainname As String, ByVal type As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("deleteEmailAccount", New Object() {emailid, domainname, type})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BegindeleteEmailAccount(ByVal emailid As String, ByVal domainname As String, ByVal type As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("deleteEmailAccount", New Object() {emailid, domainname, type}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EnddeleteEmailAccount(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#renewProducts", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function renewProducts(ByVal orderno As Decimal, ByVal domaiName As String, ByVal products() As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("renewProducts", New Object() {orderno, domaiName, products})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginrenewProducts(ByVal orderno As Decimal, ByVal domaiName As String, ByVal products() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("renewProducts", New Object() {orderno, domaiName, products}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndrenewProducts(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:UniversalDomainServices#renewProducts", RequestNamespace:="urn:UniversalDomainServices", ResponseNamespace:="urn:UniversalDomainServices")>  _
        Public Function renewServices(ByVal productinfo As productinfo) As <System.Xml.Serialization.SoapElementAttribute("return")> ReturnMsg
            Dim results() As Object = Me.Invoke("renewServices", New Object() {productinfo})
            Return CType(results(0),ReturnMsg)
        End Function
        
        '<remarks/>
        Public Function BeginrenewServices(ByVal productinfo As productinfo, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("renewServices", New Object() {productinfo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndrenewServices(ByVal asyncResult As System.IAsyncResult) As ReturnMsg
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnMsg)
        End Function
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("List", "urn:UniversalDomainServices")>  _
    Public Class List
        
        '<remarks/>
        Public ERRORCODE As System.SByte
        
        '<remarks/>
        Public ERRORDESC As String
        
        '<remarks/>
        Public LIST() As DomainType
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("DomainType", "urn:UniversalDomainServices")>  _
    Public Class DomainType
        
        '<remarks/>
        Public NAME As String
        
        '<remarks/>
        Public TYPE As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("product", "urn:UniversalDomainServices")>  _
    Public Class product
        
        '<remarks/>
        Public code As String
        
        '<remarks/>
        Public oldcode As String
        
        '<remarks/>
        Public serialno As String
        
        '<remarks/>
        Public duration As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("productinfo", "urn:UniversalDomainServices")>  _
    Public Class productinfo
        
        '<remarks/>
        Public customeruid As String
        
        '<remarks/>
        Public customerid As String
        
        '<remarks/>
        Public orderdate As String
        
        '<remarks/>
        Public ordernumber As String
        
        '<remarks/>
        Public type As String
        
        '<remarks/>
        Public entityid As String
        
        '<remarks/>
        Public products() As product
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("VerifyResult", "urn:UniversalDomainServices")>  _
    Public Class VerifyResult
        
        '<remarks/>
        Public ERRORCODE As System.SByte
        
        '<remarks/>
        Public ERRORDESC As String
        
        '<remarks/>
        Public FLAG As Integer
        
        '<remarks/>
        Public TAILID As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("EmailType", "urn:UniversalDomainServices")>  _
    Public Class EmailType
        
        '<remarks/>
        Public NAME As String
        
        '<remarks/>
        Public TYPE As String
        
        '<remarks/>
        Public FORWARD As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("EmailList", "urn:UniversalDomainServices")>  _
    Public Class EmailList
        
        '<remarks/>
        Public ERRORCODE As System.SByte
        
        '<remarks/>
        Public ERRORDESC As String
        
        '<remarks/>
        Public LIST() As EmailType
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("SubDomaininfo", "urn:UniversalDomainServices")>  _
    Public Class SubDomaininfo
        
        '<remarks/>
        Public SUBDOMAINNAME As String
        
        '<remarks/>
        Public USER As String
        
        '<remarks/>
        Public PASSWORD As String
        
        '<remarks/>
        Public ERRORCODE As System.SByte
        
        '<remarks/>
        Public ERRORDESC As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("Details", "urn:UniversalDomainServices")>  _
    Public Class Details
        
        '<remarks/>
        Public NAME As String
        
        '<remarks/>
        Public USER As String
        
        '<remarks/>
        Public PASSWORD As String
        
        '<remarks/>
        Public ERRORCODE As System.SByte
        
        '<remarks/>
        Public ERRORDESC As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("productDetails", "urn:UniversalDomainServices")>  _
    Public Class productDetails
        
        '<remarks/>
        Public code As System.SByte
        
        '<remarks/>
        Public serialno As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("Domaininfo", "urn:UniversalDomainServices")>  _
    Public Class Domaininfo
        
        '<remarks/>
        Public DOMAINNAME As String
        
        '<remarks/>
        Public FTPPASSWORD As String
        
        '<remarks/>
        Public ERRORCODE As System.SByte
        
        '<remarks/>
        Public ERRORDESC As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("MemberInfo", "urn:UniversalDomainServices")>  _
    Public Class MemberInfo
        
        '<remarks/>
        Public name As String
        
        '<remarks/>
        Public companyname As String
        
        '<remarks/>
        Public isocode As String
        
        '<remarks/>
        Public email As String
        
        '<remarks/>
        Public password As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("DomainDetail", "urn:UniversalDomainServices")>  _
    Public Class DomainDetail
        
        '<remarks/>
        Public domainName As String
        
        '<remarks/>
        Public status As String
        
        '<remarks/>
        Public customerid As Long
        
        '<remarks/>
        Public refid As Integer
        
        '<remarks/>
        Public hosting As Boolean
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("ReturnMsg", "urn:UniversalDomainServices")>  _
    Public Class ReturnMsg
        
        '<remarks/>
        Public ERRORCODE As System.SByte
        
        '<remarks/>
        Public ERRORDESC As String
    End Class
End Namespace
