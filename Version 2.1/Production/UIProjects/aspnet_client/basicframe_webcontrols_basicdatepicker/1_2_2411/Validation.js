/*  Coolite Inc. 2004-2006. All rights are reserved. Unauthorized use prohibited. Visit http://www.basicdatepicker.com/ for more info. Version 1.2.2411  */function BasicGetSelectedDate(bdpId, controlType){if(controlType == "BasicFrame.WebControls.BasicDatePicker"){var bdp = BasicDatePickerLoadControl(bdpId);var date = bdp.getSelectedDate();return date;}else{var bdp = BDPLiteLoadControl(bdpId);var date = bdp.getSelectedDate();return date;}};function BasicFormatDateToDateOrder(date, val){    var month = (date.getMonth() + 1);    var day = date.getDate();    var year = date.getFullYear();var value;    if (val.dateorder == "ymd"){        value = year + "/" + month + "/" + day;        }    if (val.dateorder == "mdy") {        value = month + "/" + day + "/" + year;        }    else {        value = day + "/" + month + "/" + year;        }    return value;};function BasicDateCompareValidatorEvaluateIsValid(val){    var date1 = BasicGetSelectedDate(val.controltovalidate, val.controltype);var date2 = (null == document.all[val.controltocompare]) ? val.valuetocompare : BasicGetSelectedDate(val.controltocompare, val.controltocomparetype);return BasicValidatorCompare(date1, date2, val.operator);};function BasicValidatorCompare(date1, date2, operator){if(date1 == null && date2 == null)return true;switch (operator){case "NotEqual":return (date1 != date2);case "GreaterThan":return (date1 > date2);case "GreaterThanEqual":return (date1 >= date2);case "LessThan":return (date1 < date2);case "LessThanEqual":return (date1 <= date2);default:return (date1 == date2);            }};function BasicDateDifferenceValidatorEvaluateIsValid(val){var date = BasicGetSelectedDate(val.controltovalidate, val.controltype);var date2 = BasicGetSelectedDate(val.controltocompare, val.controltocomparetype);if(date == null && date2 == null)return true;else if(date == null || date2 == null)return false;var dayAsMs = 1000 * 60 * 60 * 24;var dateAsMs = date.getTime();var date2AsMs = date2.getTime();var days = Math.round((date2AsMs - dateAsMs)/dayAsMs) + ""; /* needs to be a string for regex */var compareTo = val.difference;return ValidatorCompare(days, compareTo, val.operator, val);};function BasicDateRequiredValidatorEvaluateIsValid(val){var selectedDate = BasicGetSelectedDate(val.controltovalidate, val.controltype);return (!(selectedDate == null));};function BasicIsDateValidatorEvaluateIsValid(val){if(val.controltype == "BasicFrame.WebControls.BasicDatePicker"){var bdp = BasicDatePickerLoadControl(val.controltovalidate);return bdp.getIsDate();}else{var bdpl = BDPLiteLoadControl(val.controltovalidate);return bdpl.getIsDate();}};function BasicDateRangeValidatorEvaluateIsValid(val){var date = BasicGetSelectedDate(val.controltovalidate, val.controltype);if (date == null) return true;var value = BasicFormatDateToDateOrder(date, val);return (ValidatorCompare(value, val.minimumvalue, "GreaterThanEqual", val) && ValidatorCompare(value, val.maximumvalue, "LessThanEqual", val));};